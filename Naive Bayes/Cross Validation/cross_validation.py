#print("CROSS VALIDATION")
#Here we open the two files generated by making_partition.py which contain the new test set with labels
#This code snipped insert itself at the very end of the Naive Bayes algorithm
#The idea behind this is to count the number of success and failure at guessing the right
#label and then making a confusion matrix
with open("new_testfile_x.csv",'r',encoding='utf8') as new_testfile_x, open("new_testfile_y.csv",'r',encoding='utf8') as new_testfile_y:
	testDataCSV = csv.reader(new_testfile_x,delimiter=',');
	labelDataCSV = csv.reader(new_testfile_y,delimiter=',');
	
	result = []
	label = []
	index = -1;
	for row in testDataCSV:
		if(index == -1):
			index = index + 1;
			continue;
		result.append(calculateMostLikely(row[1].split(),languagesProb,languages.all,fr_label,slo_label,ger_label,spa_label,pol_label,total_label));
		index = index + 1;
		
	index = -1;
	for row in labelDataCSV:	
		if(index == -1):
			index = index + 1;
			continue;
			
		label.append(int(row[1]))
		index = index + 1;	
	
	
success = 0;
failure = 0;
w, h = 5, 5;
conf_matrix = [[0 for x in range(w)] for y in range(h)] 
		
#Here we create our confusion Matrix to calculate all probability for plotting
#(Plotting done in Matlab)
for index in range(len(result)):
	conf_matrix[label[index]][result[index]] = conf_matrix[label[index]][result[index]] + 1;
	
prob = []
for i in range(0,5):
	print(str(i) + " ", end='') 
	total = 0;
	for j in range(-1,5):
		if(j == -1 ):
			print("0 1 2 3 4 prob");
			continue;
		total = total + conf_matrix[i][j];
		print(str(conf_matrix[i][j]) + ' ', end='')
	prob.append(conf_matrix[i][i]/total);
	print(str(conf_matrix[i][i]/total) + " \n")

total = 0;	
for i in range(0,5):
	total = total + prob[i];
print("TOTAL PROB " + str(total/5))